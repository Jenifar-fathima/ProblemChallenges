using AbsoluteValueProblem;
using AccessControlProblem;
using ArraySearchProblem;
using AverageProblem;
using BasicCalculationProblem;
using BubbleSortProblem;
using CharAlphabetProblem;
using CheckPrimeProblem;
using CheckVowelsProblem;
using CommentProgram;
using ConditionalEvenProblem;
using ConditionalOperatorProblem;
using ConsecutiveSumProblem;
using DisplayFunctionProblem;
using DivisionByZeroProblem;
using DivisionFactorProblem;
using DoubleValueProblem;
using DrawRectProblem;
using DrawSquareProblem;
using DrawTriangleProblem;
using EquivalentProblem;
using EvenArrayProblem;
using FloatValueProblem;
using FunctionGreetingProblem;
using FunctionParameterProblem;
using GreatestNumberProblem;
using HelloWorldProgram;
using HexaDecimalProblem;
using HexaDecimalTableProblem;
using HollowRectangleProblem;
using HollowSquareProblem;
using IfCalculatiionProblem;
using InfiniteDivisionsProblem;
using InfiniteSumProblem;
using InstructionDoWhileProblem;
using InstructionWhileProblem;
using MathematicalStatisticsProblem;
using MultipleNumberProblem;
using MultiplicationFactorProblem;
using MultiplicationRangeProblem;
using MultiplicationTableProblem;
using NamePyramidProblem;
using NameTriangleProblem;
using NorthEastTriangleProblem;
using NumberOrNotProblem;
using NumberRangeProblem;
using NumberRepeatedProblem;
using OddDescendingProblem;
using OrderOfPriorityProblem;
using ParallelogramProblem;
using PolynomialSequenceProblem;
using PositiveNegativeSearchProblem;
using PositiveOrNegativeProblem;
using PrimeProductProblem;
using PrintLineProgram;
using ProblemChallenges.Day___03._34___Problem;
using ProblemChallenges.Day___04._59___Problem;
using PurchaseChangeProblem;
using RandomNumberProblem;
using ReadUserInputProgram;
using RepetitiveStructureProblem;
using ReturnFunctionProblem;
using ReverseArrayProblem;
using ReverseOrderProblem;
using SphereCalculationProgram;
using SquareNumberProblem;
using StarPyramidPyramidProblem;
using StoreUserInputProgram;
using StructUseProblem;
using SwitchBreakDefaultProblem;
using SwitchCalculationProblem;
using TemperatureConversionProblem;


//HelloWorld.HelloWorldMethod();
//PrintLine.PrintLineMethod();
//ReadUserInput.Solution();
//StoreUserInput.Solution();
//Comment.Solution();
//SphereCalculation.Solution();
//BasicCalculation.Solution();
//ReverseOrder.Solution();
//TemperatureConversion.Solution();
//DoubleValue.Solution();
//FloatValue.Solution();
//MultiplicationTable.Solution();
//RandomNumber.Solution();
//SquareNumber.Solution();
//MultiplicationFactor.Solution();
//DivisionFactor.Solution();
//DivisionByZero.Solution();
//OrderOfPriority.Solution();
//Average.Solution();
//Equivalent.Solution();
//DrawSquare.Solution();
//DrawRect.Solution();
//IfCalculatiion.Solution();
//SwitchCalculation.Solution();
//PositiveOrNegative.Solution();
//GreatestNumber.Solution();
//InstructionWhile.Solution();
//InstructionDoWhile.Solution();
//NumberRange.Solution();
//InfiniteSum.Solution();
//NumberRepeated.Solution();
//MultiplicationRange.Solution();
//SwitchBreakDefault.Solution();
//DigitsInANumber.Solution();
//AbsoluteValue.Solution();
//ConsecutiveSum.Solution();
//CheckPrime.Solution();
//OddDescending.Solution();
//CheckVowels.Solution();
//NumberOrNot.Solution();
//ConditionalEven.Solution();
//StructUse.Solution();
//FunctionGreeting.Solution();
//FunctionParameter.Solution();
//ReturnFunction.Solution();
//PolynomialSequence.Solution();
//DrawTriangle.Solution();
//NorthEastTriangle.Solution();
//NameTriangle.Solution();
//DisplayFunction.Solution();
//MultipleNumber.Solution();
//AccessControl.Solution();
//InfiniteDivisions.Solution();
//RepetitiveStructure.Solution();
//MathematicalStatistics.Solution();
//CharAlphabet.Solution();
//PurchaseChange.Solution();
//ConditionalOperator.Solution();
//ConditionalOperatorNested.Solution();
//HollowSquare.Solution();
//HollowRectangle.Solution();
//Parallelogram.Solution();
//StarPyramid.Solution();
//NamePyramid.Solution();
//PrimeProduct.Solution();
//HexaDecimal.Solution();
//HexaDecimalTable.Solution();
//ReverseArray.Solution();
//ArraySearch.Solution();
//EvenArray.Solution();
//PositiveNegativeSearch.Solution();
BubbleSort.Solution();